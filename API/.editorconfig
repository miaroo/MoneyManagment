# Rules in this file were initially inferred by Visual Studio IntelliCode from the C:\Users\Jakub Pilich\Documents\Onex\Onex.Store\Onex.Store codebase based on best match to current usage at 26.07.2021
# You can modify the rules from these initially generated values to suit your own policies
# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
[*.cs]


#Core editorconfig formatting - indentation

#use soft tabs (spaces) for indentation
indent_style = space

#Formatting - indentation options

#indent switch case contents.
csharp_indent_case_contents = true
#csharp_indent_case_contents_when_block
csharp_indent_case_contents_when_block = true
#indent switch labels
csharp_indent_switch_labels = true

#Formatting - new line options

#place catch statements on a new line
csharp_new_line_before_catch = true
#place else statements on a new line
csharp_new_line_before_else = true
#require members of anonymous types to be on the same line
csharp_new_line_before_members_in_anonymous_types = false
#require members of object intializers to be on separate lines
csharp_new_line_before_members_in_object_initializers = true
#require braces to be on a new line for methods, lambdas, object_collection_array_initializers, control_blocks, types, anonymous_types, and properties (also known as "Allman" style)
csharp_new_line_before_open_brace =all

#Formatting - organize using options

#do not place System.* using directives before other using directives
dotnet_sort_system_directives_first = false

#Formatting - spacing options

#require NO space between a cast and the value
csharp_space_after_cast =false
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_after_colon_in_inheritance_clause = true
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements = true
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_before_colon_in_inheritance_clause = true
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false

#Formatting - wrapping options

#leave code block on single line
csharp_preserve_single_line_blocks = true
#leave statements and member declarations on the same line
csharp_preserve_single_line_statements = true

#Style - Code block preferences

#prefer no curly braces if allowed
csharp_prefer_braces = false:suggestion

#Style - expression bodied member options

#prefer expression-bodied members for accessors
csharp_style_expression_bodied_accessors = true:suggestion
#prefer block bodies for constructors
csharp_style_expression_bodied_constructors = false:suggestion
#prefer block bodies for methods
csharp_style_expression_bodied_methods = false:suggestion
#prefer expression-bodied members for properties
csharp_style_expression_bodied_properties = true:suggestion

#Style - expression level options

#prefer out variables to be declared before the method call
csharp_style_inlined_variable_declaration = false:suggestion
#prefer tuple names to ItemX properties
dotnet_style_explicit_tuple_names = true:suggestion
#prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_member_access = true:suggestion

#Style - Expression-level  preferences

#prefer default over default(T)
csharp_prefer_simple_default_expression = true:suggestion
#prefer objects to be initialized using object initializers when possible
dotnet_style_object_initializer = true:suggestion
#prefer inferred anonymous type member names
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
#prefer inferred tuple element names
dotnet_style_prefer_inferred_tuple_names = true:suggestion

#Style - implicit and explicit types

#prefer var over explicit type in all cases, unless overridden by another code style rule
csharp_style_var_elsewhere = true:suggestion
#prefer var is used to declare variables with built-in system types such as int
csharp_style_var_for_built_in_types = true:suggestion
#prefer var when the type is already mentioned on the right-hand side of a declaration expression
csharp_style_var_when_type_is_apparent = true:suggestion

#Style - language keyword and framework type options

#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

#Style - Miscellaneous preferences

#prefer local functions over anonymous functions
csharp_style_pattern_local_over_anonymous_function = true:suggestion

#Style - modifier options

#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

#Style - Modifier preferences

#when this rule is set to a list of modifiers, prefer the specified ordering.
csharp_preferred_modifier_order = public,private,protected,async,readonly,static,override,new,abstract,sealed:suggestion

#Style - Pattern matching

#prefer pattern matching instead of is expression with type casts
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

#Style - qualification options

#prefer fields not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_field = false:suggestion
#prefer methods not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_method = false:suggestion
#prefer properties not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_property = false:suggestion
dotnet_diagnostic.SA1124.severity=silent
dotnet_diagnostic.SA1122.severity=error
dotnet_diagnostic.SA1101.severity=silent
dotnet_diagnostic.SA1503.severity=silent
dotnet_diagnostic.SA1117.severity=silent
dotnet_diagnostic.SA1200.severity=silent
dotnet_diagnostic.SA1633.severity=silent
dotnet_diagnostic.SA1634.severity=silent
dotnet_diagnostic.SA1635.severity=silent
dotnet_diagnostic.SA1636.severity=silent
dotnet_diagnostic.SA1637.severity=silent
dotnet_diagnostic.SA1638.severity=silent
dotnet_diagnostic.SA1639.severity=silent
dotnet_diagnostic.SA1640.severity=silent
dotnet_diagnostic.SA1641.severity=silent
dotnet_diagnostic.SA1642.severity=silent
dotnet_diagnostic.SA1643.severity=silent
dotnet_diagnostic.SA1644.severity=silent
dotnet_diagnostic.SA1645.severity=silent
dotnet_diagnostic.SA1646.severity=silent
dotnet_diagnostic.SA1647.severity=silent
dotnet_diagnostic.SA1648.severity=silent
dotnet_diagnostic.SA1649.severity=silent
dotnet_diagnostic.SA1651.severity=silent
dotnet_diagnostic.SA1650.severity=silent
dotnet_diagnostic.SA1600.severity=silent
dotnet_diagnostic.SA1601.severity=silent
dotnet_diagnostic.SA1602.severity=silent
dotnet_diagnostic.SA1603.severity=silent
dotnet_diagnostic.SA1604.severity=silent
dotnet_diagnostic.SA1605.severity=silent
dotnet_diagnostic.SA1606.severity=silent
dotnet_diagnostic.SA1607.severity=silent
dotnet_diagnostic.SA1608.severity=silent
dotnet_diagnostic.SA1609.severity=silent
dotnet_diagnostic.SA1610.severity=silent
dotnet_diagnostic.SA1611.severity=silent
dotnet_diagnostic.SA1612.severity=silent
dotnet_diagnostic.SA1613.severity=silent
dotnet_diagnostic.SA1614.severity=silent
dotnet_diagnostic.SA1615.severity=silent
dotnet_diagnostic.SA1616.severity=silent
dotnet_diagnostic.SA1617.severity=silent
dotnet_diagnostic.SA1618.severity=silent
dotnet_diagnostic.SA1619.severity=silent
dotnet_diagnostic.SA1620.severity=silent
dotnet_diagnostic.SA1621.severity=silent
dotnet_diagnostic.SA1622.severity=silent
dotnet_diagnostic.SA1623.severity=silent
dotnet_diagnostic.SA1624.severity=silent
dotnet_diagnostic.SA1625.severity=silent
dotnet_diagnostic.SA1626.severity=silent
dotnet_diagnostic.SA1627.severity=silent
dotnet_diagnostic.SA1628.severity=silent
dotnet_diagnostic.SA1629.severity=silent
dotnet_diagnostic.SA1630.severity=silent
dotnet_diagnostic.SA1631.severity=silent
dotnet_diagnostic.SA1632.severity=silent
dotnet_diagnostic.SA1309.severity=silent
dotnet_diagnostic.SA1514.severity=silent
dotnet_diagnostic.SA1515.severity=silent
dotnet_diagnostic.SA1516.severity=silent
dotnet_diagnostic.SA1402.severity=silent
dotnet_diagnostic.SA1127.severity=silent
dotnet_diagnostic.SA1128.severity=silent
dotnet_diagnostic.SA1502.severity=silent
dotnet_diagnostic.SA1401.severity=silent
dotnet_diagnostic.SA1123.severity=silent
dotnet_diagnostic.SA1129.severity=silent
dotnet_diagnostic.SA1314.severity=silent
dotnet_diagnostic.SX1309.severity=silent
dotnet_diagnostic.SX1309S.severity=silent
dotnet_diagnostic.SA0001.severity=silent
dotnet_diagnostic.SA1512.severity=silent
dotnet_diagnostic.SA1208.severity=silent
dotnet_diagnostic.SA1413.severity=silent
dotnet_diagnostic.IDE0036.severity=silent

[*.{cs,vb}]
dotnet_diagnostic.CA1816.severity=silent